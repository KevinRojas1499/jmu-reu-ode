par(mfrow=c(1,2))
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree")
plot(adaptive1[,2],adaptive1[,4],main="Number of Steps vs Degree",ylab="Time(microseconds)",xlab="Degree")
#Adaptive 2
adaptive2 = DataFlame[(DataFlame[1] == "Adaptive2"),]
par(mfrow=c(1,2))
plot(adaptive2[,2],adaptive2[,3], main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree")
DataFlame <- read.csv('PendulumAllTests.dat', header = FALSE, sep = ' ', dec = '.')
#Adaptive 1
adaptive1 = DataFlame[(DataFlame[1] == "Adaptive1"),]
par(mfrow=c(1,2))
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree")
plot(adaptive1[,2],adaptive1[,4],main="Number of Steps vs Degree",ylab="Time(microseconds)",xlab="Degree")
#Adaptive 2
adaptive2 = DataFlame[(DataFlame[1] == "Adaptive2"),]
par(mfrow=c(1,2))
plot(adaptive2[,2],adaptive2[,3], main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree")
plot(adaptive2[,2],adaptive2[,4], main="Number of Steps vs Degree",ylab = "Time(microseconds)",xlab = "Degree")
#Adaptive 3
adaptive3 = DataFlame[(DataFlame[1] == "Adaptive3"),]
par(mfrow=c(1,2))
plot(adaptive3[,2],adaptive3[,3], main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree")
plot(adaptive3[,2],adaptive3[,4], main="Number of Steps vs Degree",ylab = "Time(microseconds)",xlab = "Degree")
setwd('~/Documents/REU /Github Repo/General Solver')
DataFlame <- read.csv('PendulumAllTests.dat', header = FALSE, sep = ' ', dec = '.')
#Adaptive 1
adaptive1 = DataFlame[(DataFlame[1] == "Adaptive1"),]
par(mfrow=c(1,2))
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree")
plot(adaptive1[,2],adaptive1[,4],main="Number of Steps vs Degree",ylab="Time(microseconds)",xlab="Degree")
#Adaptive 3
adaptive3 = DataFlame[(DataFlame[1] == "Adaptive3"),]
par(mfrow=c(1,2))
plot(adaptive3[,2],adaptive3[,3], main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree")
plot(adaptive3[,2],adaptive3[,4], main="Number of Steps vs Degree",ylab = "Time(microseconds)",xlab = "Degree")
setwd('~/Documents/REU /Github Repo/General Solver')
DataFlame <- read.csv('VanDerPolAllTests.dat', header = FALSE, sep = ' ', dec = '.')
#Adaptive 1
adaptive1 = DataFlame[(DataFlame[1] == "Adaptive1"),]
par(mfrow=c(1,2))
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree")
plot(adaptive1[,2],adaptive1[,4],main="Number of Steps vs Degree",ylab="Time(microseconds)",xlab="Degree")
#Adaptive 2
adaptive2 = DataFlame[(DataFlame[1] == "Adaptive2"),]
par(mfrow=c(1,2))
plot(adaptive2[,2],adaptive2[,3], main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree")
plot(adaptive2[,2],adaptive2[,4], main="Number of Steps vs Degree",ylab = "Time(microseconds)",xlab = "Degree")
setwd('~/Documents/REU /Github Repo/General Solver')
DataFlame <- read.csv('VanDerPolAllTests.dat', header = FALSE, sep = ' ', dec = '.')
#Adaptive 1
adaptive1 = DataFlame[(DataFlame[1] == "Adaptive1"),]
png("4_VanderpolPlotsAdaptive1.png", width = 1254, height = 614)
par(mfrow=c(1,2))
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree")
plot(adaptive1[,2],adaptive1[,4],main="Number of Steps vs Degree",ylab="Number of Steps",xlab="Degree")
dev.off()
#Adaptive 2
adaptive2 = DataFlame[(DataFlame[1] == "Adaptive2"),]
png("4_VanderpolPlotsAdaptive2.png", width = 1254, height = 614)
par(mfrow=c(1,2))
plot(adaptive2[,2],adaptive2[,3], main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree")
plot(adaptive2[,2],adaptive2[,4], main="Number of Steps vs Degree",ylab = "Number of Steps",xlab = "Degree")
dev.off()
png("4_VanderpolPlotsAdaptive1.png", width = 1254, height = 614)
par(mfrow=c(1,2))
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree", cex = 1.5)
plot(adaptive1[,2],adaptive1[,4],main="Number of Steps vs Degree",ylab="Number of Steps",xlab="Degree", cex = 1.5)
dev.off()
png("4_VanderpolPlotsAdaptive1.png", width = 1254, height = 614)
x = 2;
par(mfrow=c(1,2))
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree", cex = x)
plot(adaptive1[,2],adaptive1[,4],main="Number of Steps vs Degree",ylab="Number of Steps",xlab="Degree", cex = x)
dev.off()
x = 10;
png("4_VanderpolPlotsAdaptive1.png", width = 1254, height = 614)
x = 10;
par(mfrow=c(1,2))
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree", cex = x)
plot(adaptive1[,2],adaptive1[,4],main="Number of Steps vs Degree",ylab="Number of Steps",xlab="Degree", cex = x)
dev.off()
png("4_VanderpolPlotsAdaptive1.png", width = 1254, height = 614)
x = 10;
par(mfrow=c(1,2))
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree", cex.axis = x)
plot(adaptive1[,2],adaptive1[,4],main="Number of Steps vs Degree",ylab="Number of Steps",xlab="Degree", cex.axis = x)
dev.off()
png("4_VanderpolPlotsAdaptive1.png", width = 1254, height = 614)
x = 2;
par(mfrow=c(1,2))
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree", cex.axis = x)
plot(adaptive1[,2],adaptive1[,4],main="Number of Steps vs Degree",ylab="Number of Steps",xlab="Degree", cex.axis = x)
dev.off()
png("4_VanderpolPlotsAdaptive1.png", width = 1254, height = 614)
x = 2;
par(mfrow=c(1,2))
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree", cex.lab = x)
plot(adaptive1[,2],adaptive1[,4],main="Number of Steps vs Degree",ylab="Number of Steps",xlab="Degree", cex.lab = x)
dev.off()
png("4_VanderpolPlotsAdaptive1.png", width = 1254, height = 614)
x = 1.2;
par(mfrow=c(1,2))
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree", cex.lab = x)
plot(adaptive1[,2],adaptive1[,4],main="Number of Steps vs Degree",ylab="Number of Steps",xlab="Degree", cex.lab = x)
dev.off()
#Adaptive 2
adaptive2 = DataFlame[(DataFlame[1] == "Adaptive2"),]
png("4_VanderpolPlotsAdaptive2.png", width = 1254, height = 614)
par(mfrow=c(1,2))
plot(adaptive2[,2],adaptive2[,3], main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree",cex.lab = x)
plot(adaptive2[,2],adaptive2[,4], main="Number of Steps vs Degree",ylab = "Number of Steps",xlab = "Degree",cex.lab = x)
dev.off()
par(mfrow=c(1,2))
plot(adaptive2[,2],adaptive2[,3], main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree",cex.lab = x)
points(adaptive1[,2],adaptive1[,3], pch = 2)
plot(adaptive2[,2],adaptive2[,4], main="Number of Steps vs Degree",ylab = "Number of Steps",xlab = "Degree",cex.lab = x)
dev.off()
par(mfrow=c(1,2))
plot(adaptive2[,2],adaptive2[,3], main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree",cex.lab = x)
points(adaptive1[,2],adaptive1[,3], pch = 2)
plot(adaptive2[,2],adaptive2[,4], main="Number of Steps vs Degree",ylab = "Number of Steps",xlab = "Degree",cex.lab = x)
par(mfrow=c(1,2))
plot(adaptive2[,2],adaptive2[,3], main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree",cex.lab = x)
points(adaptive1[,2],adaptive1[,3], pch = 2)
plot(adaptive2[,2],adaptive2[,4], main="Number of Steps vs Degree",ylab = "Number of Steps",xlab = "Degree",cex.lab = x)
points(adaptive1[,2],adaptive1[,4], pch = 2)
par(mfrow=c(1,2))
plot(adaptive2[,2],adaptive2[,3], main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree",cex.lab = x)
points(adaptive1[,2],adaptive1[,3], pch = 2, color = "gray")
legend("topleft",
c("Adaptive2","Adaptive1"),
fill=c("blue","red")
)
plot(adaptive2[,2],adaptive2[,4], main="Number of Steps vs Degree",ylab = "Number of Steps",xlab = "Degree",cex.lab = x)
points(adaptive1[,2],adaptive1[,4], pch = 2)
par(mfrow=c(1,2))
plot(adaptive2[,2],adaptive2[,3], main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree",cex.lab = x)
points(adaptive1[,2],adaptive1[,3], pch = 2, color = "gray")
legend("topleft",
c("Adaptive2","Adaptive1")
)
legend("topleft",
c("Adaptive2","Adaptive1"), pch = (1,17)
)
par(mfrow=c(1,2))
plot(adaptive2[,2],adaptive2[,3], main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree",cex.lab = x)
points(adaptive1[,2],adaptive1[,3], pch = 2, color = "gray")
legend("topleft",
c("Adaptive2","Adaptive1"), pch = (1,17)
)
legend("topleft",
c("Adaptive2","Adaptive1"), pch = c(1,17)
)
legend("topleft",
c("Adaptive2","Adaptive1"), pch = c(1,2)
)
par(mfrow=c(1,2))
plot(adaptive2[,2],adaptive2[,3], main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree",cex.lab = x)
points(adaptive1[,2],adaptive1[,3], pch = 2, color = "gray")
legend("topleft",
c("Adaptive2","Adaptive1"), pch = c(1,2)
)
plot(adaptive2[,2],adaptive2[,4], main="Number of Steps vs Degree",ylab = "Number of Steps",xlab = "Degree",cex.lab = x)
points(adaptive1[,2],adaptive1[,4], pch = 2)
legend("topleft",
c("Adaptive2","Adaptive1"), pch = c(1,2)
)
points(adaptive1[,2],adaptive1[,4], pch = 2)
legend("topright",
c("Adaptive2","Adaptive1"), pch = c(1,2)
)
par(mfrow=c(1,2))
plot(adaptive2[,2],adaptive2[,3], main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree",cex.lab = x)
points(adaptive1[,2],adaptive1[,3], pch = 2, color = "gray")
legend("topleft",
c("Adaptive2","Adaptive1"), pch = c(1,2)
)
plot(adaptive2[,2],adaptive2[,4], main="Number of Steps vs Degree",ylab = "Number of Steps",xlab = "Degree",cex.lab = x)
points(adaptive1[,2],adaptive1[,4], pch = 2)
legend("topright",
c("Adaptive2","Adaptive1"), pch = c(1,2)
)
dev.off()
par(mfrow=c(1,2))
plot(adaptive2[,2],adaptive2[,3], main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree",cex.lab = x)
points(adaptive1[,2],adaptive1[,3], pch = 2, color = "gray")
legend("topleft",
c("Adaptive2","Adaptive1"), pch = c(1,2)
)
plot(adaptive2[,2],adaptive2[,4], main="Number of Steps vs Degree",ylab = "Number of Steps",xlab = "Degree",cex.lab = x)
points(adaptive1[,2],adaptive1[,4], pch = 2)
legend("topright",
c("Adaptive2","Adaptive1"), pch = c(1,2)
)
plot(adaptive2[,2],adaptive2[,3], main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree",cex.lab = x)
points(adaptive1[,2],adaptive1[,3], pch = 2, color = "gray")
legend("topleft",
c("Adaptive2","Adaptive1"), pch = c(1,2)
)
setwd('~/Documents/REU /Github Repo/General Solver')
DataFlame <- read.csv('VanDerPolAllTests.dat', header = FALSE, sep = ' ', dec = '.')
adaptive1 = DataFlame[(DataFlame[1] == "Adaptive1"),]
adaptive2 = DataFlame[(DataFlame[1] == "Adaptive2"),]
png("4_VanderpolPlotsAdaptive1.png", width = 1254, height = 614)
x = 1.2;
par(mfrow=c(1,2))
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree", cex.lab = x)
points(adaptive2[,2],adaptive2[,3], pch = 2, color = "gray")
png("4_VanderpolPlotsAdaptive1.png", width = 1254, height = 614)
x = 1.2;
par(mfrow=c(1,2))
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree", cex.lab = x)
points(adaptive2[,2],adaptive2[,3], pch = 2, color = "gray")
points(adaptive2[,2],adaptive2[,3], pch = 2)
legend("topleft",
c("Adaptive1","Adaptive2"), pch = c(1,2)
)
plot(adaptive1[,2],adaptive1[,4],main="Number of Steps vs Degree",ylab="Number of Steps",xlab="Degree", cex.lab = x)
points(adaptive2[,2],adaptive2[,4], pch = 2)
legend("topright",
c("Adaptive1","Adaptive2"), pch = c(1,2)
)
dev.off()
x = 1.2;
par(mfrow=c(1,2))
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree", cex.lab = x)
points(adaptive2[,2],adaptive2[,3], pch = 2)
legend("topleft",
c("Adaptive1","Adaptive2"), pch = c(1,2)
)
plot(adaptive1[,2],adaptive1[,4],main="Number of Steps vs Degree",ylab="Number of Steps",xlab="Degree", cex.lab = x)
points(adaptive2[,2],adaptive2[,4], pch = 2)
legend("topright",
c("Adaptive1","Adaptive2"), pch = c(1,2)
)
setwd('~/Documents/REU /Github Repo/General Solver')
DataFlame <- read.csv('VanDerPolAllTests.dat', header = FALSE, sep = ' ', dec = '.')
adaptive1 = DataFlame[(DataFlame[1] == "Adaptive1"),]
adaptive2 = DataFlame[(DataFlame[1] == "Adaptive2"),]
x = 1.2;
par(mfrow=c(1,2))
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree", cex.lab = x)
points(adaptive2[,2],adaptive2[,3], pch = 2)
setwd('~/Documents/REU /Github Repo/General Solver')
DataFlame <- read.csv('VanDerPolAllTests.dat', header = FALSE, sep = ' ', dec = '.')
adaptive1 = DataFlame[(DataFlame[1] == "Adaptive1"),]
adaptive2 = DataFlame[(DataFlame[1] == "Adaptive2"),]
x = 1.2;
par(mfrow=c(1,2))
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree", cex.lab = x)
points(adaptive2[,2],adaptive2[,3], pch = 2)
legend("topleft",
c("Adaptive1","Adaptive2"), pch = c(1,2)
)
plot(adaptive1[,2],adaptive1[,4],main="Number of Steps vs Degree",ylab="Number of Steps",xlab="Degree", cex.lab = x)
points(adaptive2[,2],adaptive2[,4], pch = 2)
legend("topright",
c("Adaptive1","Adaptive2"), pch = c(1,2)
)
par(mfrow=c(1,2))
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree", cex.lab = x, col=rgb(0.2,0.4,0.1,0.7))
points(adaptive2[,2],adaptive2[,3], pch = 2,col=rgb(0.8,0.4,0.1,0.7))
legend("topleft",
c("Adaptive1","Adaptive2"), pch = c(1,2)
)
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree", cex.lab = x, col=rgb(0.2,0.4,0.1,0.7))
points(adaptive2[,2],adaptive2[,3], pch = 2,col=rgb(0.8,0.4,0.1,0.7))
legend("topleft",
c("Adaptive1","Adaptive2"), pch = c(1,2), col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7))
)
plot(adaptive1[,2],adaptive1[,4],main="Number of Steps vs Degree",ylab="Number of Steps",xlab="Degree", cex.lab = x)
par(mfrow=c(1,2))
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree", cex.lab = x, col=rgb(0.2,0.4,0.1,0.7))
points(adaptive2[,2],adaptive2[,3], pch = 2,col=rgb(0.8,0.4,0.1,0.7))
legend("topleft",
c("Adaptive1","Adaptive2"), pch = c(1,2), col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7))
)
legend("topright",
c("Adaptive1","Adaptive2"), pch = c(1,2),  col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7))
)
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree", cex.lab = x, col=rgb(0.2,0.4,0.1,0.7))
points(adaptive2[,2],adaptive2[,3], pch = 2,col=rgb(0.8,0.4,0.1,0.7))
legend("topleft",
c("Adaptive1","Adaptive2"), pch = c(1,2), col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7))
)
plot(adaptive1[,2],adaptive1[,4],main="Number of Steps vs Degree",ylab="Number of Steps",xlab="Degree", cex.lab = x,col=rgb(0.2,0.4,0.1,0.7))
points(adaptive2[,2],adaptive2[,4], pch = 2,col=rgb(0.8,0.4,0.1,0.7))
par(mfrow=c(1,2))
par(mfrow=c(1,2))
par(mfrow=c(1,2))
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree", cex.lab = x, col=rgb(0.2,0.4,0.1,0.7))
points(adaptive2[,2],adaptive2[,3], pch = 2,col=rgb(0.8,0.4,0.1,0.7))
legend("topleft",
c("Adaptive1","Adaptive2"), pch = c(1,2), col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7))
)
plot(adaptive1[,2],adaptive1[,4],main="Number of Steps vs Degree",ylab="Number of Steps",xlab="Degree", cex.lab = x,col=rgb(0.2,0.4,0.1,0.7))
points(adaptive2[,2],adaptive2[,4], pch = 2,col=rgb(0.8,0.4,0.1,0.7))
legend("topright",
c("Adaptive1","Adaptive2"), pch = c(1,2),  col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7))
)
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree", cex.lab = x,
col=rgb(0.2,0.4,0.1,0.7), ylim = c(minY,maxY))
x = 1.2;
minY = min(adaptive1[,3], adaptive2[,3])
maxY = max(adaptive1[,3], adaptive2[,3])
par(mfrow=c(1,2))
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree", cex.lab = x,
col=rgb(0.2,0.4,0.1,0.7), ylim = c(minY,maxY))
points(adaptive2[,2],adaptive2[,3], pch = 2,col=rgb(0.8,0.4,0.1,0.7))
legend("topleft",
c("Adaptive1","Adaptive2"), pch = c(1,2), col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7))
)
plot(adaptive1[,2],adaptive1[,4],main="Number of Steps vs Degree",ylab="Number of Steps",xlab="Degree", cex.lab = x,col=rgb(0.2,0.4,0.1,0.7))
points(adaptive2[,2],adaptive2[,4], pch = 2,col=rgb(0.8,0.4,0.1,0.7))
x = 1.2;
minY = min(adaptive1[,3], adaptive2[,3])
maxY = max(adaptive1[,3], adaptive2[,3])
par(mfrow=c(1,2))
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree", cex.lab = x,
col=rgb(0.2,0.4,0.1,0.7), ylim = c(minY,maxY))
points(adaptive2[,2],adaptive2[,3], pch = 2,col=rgb(0.8,0.4,0.1,0.7))
legend("topleft",
c("KR","Warne"), pch = c(1,2), col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7))
)
plot(adaptive1[,2],adaptive1[,4],main="Number of Steps vs Degree",ylab="Number of Steps",xlab="Degree", cex.lab = x,col=rgb(0.2,0.4,0.1,0.7))
points(adaptive2[,2],adaptive2[,4], pch = 2,col=rgb(0.8,0.4,0.1,0.7))
legend("topright",
c("KR","Warne"), pch = c(1,2),  col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7))
)
png("4_VanderpolPlots.png", width = 1254, height = 614)
x = 1.2;
minY = min(adaptive1[,3], adaptive2[,3])
maxY = max(adaptive1[,3], adaptive2[,3])
par(mfrow=c(1,2))
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree", cex.lab = x,
col=rgb(0.2,0.4,0.1,0.7), ylim = c(minY,maxY))
points(adaptive2[,2],adaptive2[,3], pch = 2,col=rgb(0.8,0.4,0.1,0.7))
legend("topleft",
c("KR","Warne"), pch = c(1,2), col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7))
)
plot(adaptive1[,2],adaptive1[,4],main="Number of Steps vs Degree",ylab="Number of Steps",xlab="Degree", cex.lab = x,col=rgb(0.2,0.4,0.1,0.7))
points(adaptive2[,2],adaptive2[,4], pch = 2,col=rgb(0.8,0.4,0.1,0.7))
legend("topright",
c("KR","Warne"), pch = c(1,2),  col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7))
)
dev.off()
par(mfrow=c(1,2))
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree", cex.lab = x,
col=rgb(0.2,0.4,0.1,0.7), ylim = c(minY,maxY))
points(adaptive2[,2],adaptive2[,3], pch = 2,col=rgb(0.8,0.4,0.1,0.7))
legend("topleft",
c("KR","Warne"), pch = c(1,2),
col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7),
cex = 1.4)
)
plot(adaptive1[,2],adaptive1[,4],main="Number of Steps vs Degree",ylab="Number of Steps",xlab="Degree", cex.lab = x,col=rgb(0.2,0.4,0.1,0.7))
points(adaptive2[,2],adaptive2[,4], pch = 2,col=rgb(0.8,0.4,0.1,0.7))
legend("topright",
c("KR","Warne"), pch = c(1,2),  col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7))
)
legend("topleft",
c("KR","Warne"), pch = c(1,2),
col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7),
cex.legend = 1.4)
)
par(mfrow=c(1,2))
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree", cex.lab = x,
col=rgb(0.2,0.4,0.1,0.7), ylim = c(minY,maxY), cex = 1.2)
points(adaptive2[,2],adaptive2[,3], pch = 2,col=rgb(0.8,0.4,0.1,0.7))
legend("topleft",
c("KR","Warne"), pch = c(1,2),
col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7),
cex.legend = 1.4)
)
x = 1.2;
minY = min(adaptive1[,3], adaptive2[,3])
maxY = max(adaptive1[,3], adaptive2[,3])
par(mfrow=c(1,2))
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree", cex.lab = x,
col=rgb(0.2,0.4,0.1,0.7), ylim = c(minY,maxY), cex = 1.2)
points(adaptive2[,2],adaptive2[,3], pch = 2,col=rgb(0.8,0.4,0.1,0.7))
legend("topleft",
c("KR","Warne"), pch = c(1,2),
col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7))
)
plot(adaptive1[,2],adaptive1[,4],main="Number of Steps vs Degree",ylab="Number of Steps",xlab="Degree", cex.lab = x,col=rgb(0.2,0.4,0.1,0.7))
points(adaptive2[,2],adaptive2[,4], pch = 2,col=rgb(0.8,0.4,0.1,0.7))
legend("topright",
c("KR","Warne"), pch = c(1,2),  col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7))
)
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree", cex.lab = x,
col=rgb(0.2,0.4,0.1,0.7), ylim = c(minY,maxY), cex = 2)
points(adaptive2[,2],adaptive2[,3], pch = 2,col=rgb(0.8,0.4,0.1,0.7))
legend("topleft",
c("KR","Warne"), pch = c(1,2),
col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7))
)
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree", cex.lab = x,
col=rgb(0.2,0.4,0.1,0.7), ylim = c(minY,maxY))
points(adaptive2[,2],adaptive2[,3], pch = 2,col=rgb(0.8,0.4,0.1,0.7))
legend("topleft",
c("KR","Warne"), pch = c(1,2),
col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7))
)
par(mfrow=c(1,2))
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree", cex.lab = x,
col=rgb(0.2,0.4,0.1,0.7), ylim = c(minY,maxY))
points(adaptive2[,2],adaptive2[,3], pch = 2,col=rgb(0.8,0.4,0.1,0.7))
legend("topleft",
c("KR","Warne"), pch = c(1,2),
col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7), cex = 1.5)
)
plot(adaptive1[,2],adaptive1[,4],main="Number of Steps vs Degree",ylab="Number of Steps",xlab="Degree", cex.lab = x,col=rgb(0.2,0.4,0.1,0.7))
legend("topleft",
c("KR","Warne"), pch = c(1,2),
col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7), cex = 3)
)
par(mfrow=c(1,2))
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree", cex.lab = x,
col=rgb(0.2,0.4,0.1,0.7), ylim = c(minY,maxY))
points(adaptive2[,2],adaptive2[,3], pch = 2,col=rgb(0.8,0.4,0.1,0.7))
legend("topleft",
c("KR","Warne"), pch = c(1,2),
col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7), cex = 3)
)
legend("topleft",
c("KR","Warne"), pch = c(1,2),
col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7), cex = 10)
)
par(mfrow=c(1,2))
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree", cex.lab = x,
col=rgb(0.2,0.4,0.1,0.7), ylim = c(minY,maxY))
points(adaptive2[,2],adaptive2[,3], pch = 2,col=rgb(0.8,0.4,0.1,0.7))
legend("topleft",
c("KR","Warne"), pch = c(1,2),
col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7), cex = 10)
)
plot(adaptive1[,2],adaptive1[,4],main="Number of Steps vs Degree",ylab="Number of Steps",xlab="Degree", cex.lab = x,col=rgb(0.2,0.4,0.1,0.7))
points(adaptive2[,2],adaptive2[,4], pch = 2,col=rgb(0.8,0.4,0.1,0.7))
legend("topright",
c("KR","Warne"), pch = c(1,2),  col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7))
)
legend("topleft",
c("KR","Warne"), pch = c(1,2), cex = 10,
col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7))
)
par(mfrow=c(1,2))
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree", cex.lab = x,
col=rgb(0.2,0.4,0.1,0.7), ylim = c(minY,maxY))
points(adaptive2[,2],adaptive2[,3], pch = 2,col=rgb(0.8,0.4,0.1,0.7))
legend("topleft",
c("KR","Warne"), pch = c(1,2), cex = 1.5,
col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7))
)
par(mfrow=c(1,2))
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree", cex.lab = x,
col=rgb(0.2,0.4,0.1,0.7), ylim = c(minY,maxY))
points(adaptive2[,2],adaptive2[,3], pch = 2,col=rgb(0.8,0.4,0.1,0.7))
legend("topleft",
c("KR","Warne"), pch = c(1,2), cex = 1.3,
col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7))
)
par(mfrow=c(1,2))
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree", cex.lab = x,
col=rgb(0.2,0.4,0.1,0.7), ylim = c(minY,maxY))
points(adaptive2[,2],adaptive2[,3], pch = 2,col=rgb(0.8,0.4,0.1,0.7))
legend("topleft",
c("KR","Warne"), pch = c(1,2), cex = x,
col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7))
)
plot(adaptive1[,2],adaptive1[,4],main="Number of Steps vs Degree",ylab="Number of Steps",xlab="Degree", cex.lab = x,col=rgb(0.2,0.4,0.1,0.7))
points(adaptive2[,2],adaptive2[,4], pch = 2,col=rgb(0.8,0.4,0.1,0.7))
legend("topright",
c("KR","Warne"), pch = c(1,2),  col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7))
)
par(mfrow=c(1,2))
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree", cex.lab = x,
col=rgb(0.2,0.4,0.1,0.7), ylim = c(minY,maxY))
points(adaptive2[,2],adaptive2[,3], pch = 2,col=rgb(0.8,0.4,0.1,0.7))
legend("topleft",
c("KR","Warne"),cex = x, pch = c(1,2),
col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7))
)
plot(adaptive1[,2],adaptive1[,4],main="Number of Steps vs Degree",ylab="Number of Steps",xlab="Degree", cex.lab = x,col=rgb(0.2,0.4,0.1,0.7))
points(adaptive2[,2],adaptive2[,4], pch = 2,col=rgb(0.8,0.4,0.1,0.7))
legend("topright",
c("KR","Warne"), pch = c(1,2), cex   col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7))
)
legend("topright",
c("KR","Warne"), pch = c(1,2), cex = 1,  col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7))
)
legend("topright",
c("KR","Warne"), pch = c(1,2), cex = x,  col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7))
)
png("4_VanderpolPlots.png", width = 1254, height = 614)
x = 1.2;
minY = min(adaptive1[,3], adaptive2[,3])
maxY = max(adaptive1[,3], adaptive2[,3])
par(mfrow=c(1,2))
plot(adaptive1[,2],adaptive1[,3],main="Time vs Degree",ylab="Time(microseconds)",xlab="Degree", cex.lab = x,
col=rgb(0.2,0.4,0.1,0.7), ylim = c(minY,maxY))
points(adaptive2[,2],adaptive2[,3], pch = 2,col=rgb(0.8,0.4,0.1,0.7))
legend("topleft",
c("KR","Warne"),cex = x, pch = c(1,2),
col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7))
)
plot(adaptive1[,2],adaptive1[,4],main="Number of Steps vs Degree",ylab="Number of Steps",xlab="Degree", cex.lab = x,col=rgb(0.2,0.4,0.1,0.7))
points(adaptive2[,2],adaptive2[,4], pch = 2,col=rgb(0.8,0.4,0.1,0.7))
legend("topright",
c("KR","Warne"), pch = c(1,2), cex = x,  col = c(rgb(0.2,0.4,0.1,0.7),col=rgb(0.8,0.4,0.1,0.7))
)
dev.off()
